// Book.java
public class Book {
    private String title;

    public Book(String title) {
        this.title = title;
    }

    public String getTitle() {
        return title;
    }
}

// User.java
public abstract class User {
    protected String name;

    public User(String name) {
        this.name = name;
    }

    public abstract void showRole();
}

// Member.java
public class Member extends User {
    public Member(String name) { super(name); }

    @Override
    public void showRole() {
        System.out.println(name + " is a Member");
    }

    public void borrowBook(Book book) {
        System.out.println(name + " borrowed " + book.getTitle());
    }
}

// Librarian.java
public class Librarian extends User {
    public Librarian(String name) { super(name); }

    @Override
    public void showRole() {
        System.out.println(name + " is a Librarian");
    }

    public void addBook(Book book) {
        System.out.println(name + " added " + book.getTitle());
    }
}

// UserFactory.java
public class UserFactory {
    public static User createUser(String type, String name) {
        if(type.equalsIgnoreCase("member")) {
            return new Member(name);
        } else if(type.equalsIgnoreCase("librarian")) {
            return new Librarian(name);
        } else {
            throw new IllegalArgumentException("Invalid user type");
        }
    }
}

// LibrarySystem.java
import java.util.ArrayList;
import java.util.List;

public class LibrarySystem {
    private static LibrarySystem instance = null;
    private List<Book> books = new ArrayList<>();

    private LibrarySystem() {}

    public static LibrarySystem getInstance() {
        if(instance == null) {
            instance = new LibrarySystem();
        }
        return instance;
    }

    public void addBook(Book book) {
        books.add(book);
    }

    public void listBooks() {
        System.out.println("Books in library:");
        for(Book b : books) {
            System.out.println("- " + b.getTitle());
        }
    }
}

// Main.java
public class Main {
    public static void main(String[] args) {
        LibrarySystem library = LibrarySystem.getInstance();

        Book javaBook = new Book("Java Basics");

        // إنشاء المستخدمين باستخدام Factory
        User bob = UserFactory.createUser("librarian", "Bob");
        User alice = UserFactory.createUser("member", "Alice");

        // التعامل مع المستخدمين بعد تحويل النوع الفرعي
        ((Librarian)bob).addBook(javaBook);
        library.addBook(javaBook);

        ((Member)alice).borrowBook(javaBook);

        library.listBooks();

        bob.showRole();
        alice.showRole();
    }
}
